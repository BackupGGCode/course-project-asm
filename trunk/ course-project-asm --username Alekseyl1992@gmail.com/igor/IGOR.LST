Turbo Assembler	 Version 3.1	    04/17/13 21:16:12	    Page 1
igor.asm



      1				     ;тестировочный проект (igor)
      2	0000			     IgorPart segment 'code'
      3				     assume CS:IgorPart, DS:IgorPart, SS:IgorPart
      4				     org 100h
      5
      6
      7				     ;резидентная часть
      8	0100			     _start:
      9	0100  E9 020D			     jmp _loadTSR
     10
     11	0103  72 65 73 69 64 65	6E+	     msg2				     DB	     'resident has been	loaded', 13, 10, '$'
     12	      74 20 68 61 73 20	62+
     13	      65 65 6E 20 6C 6F	61+
     14	      64 65 64 0D 0A 24
     15	011E  50 72 6F 67 72 61	6D+	     mess_load				     DB	 'Program has already loaded !!!','$'
     16	      20 68 61 73 20 61	6C+
     17	      72 65 61 64 79 20	6C+
     18	      6F 61 64 65 64 20	21+
     19	      21 21 24
     20	013D  00000000			     old_09h				     DD	     0
     21	0141  00000000			     old_1Ch				     DD	     0
     22	0145  0000			     counter				     DW	     0
     23	0147  0000			     isPrintingSignature	     DW	     0
     24	      =0002			     printDelay				     equ     2 ; задержка перед	выводом	"подписи" в +
     25				     секундах
     26	0149  0001			     printPos				     DW	     1 ; положение подписи на экране. 0	-   +
     27				     верх, 1 - центр, 2	- низ
     28
     29					     ;;;;заменить на собственные данные. формирование таблицы идет по строке бОльшей длины.
     30					     ;;;;можно формировать через код, но это слишком сильно увеличивает	как объем работы,   +
     31				     так и объем самого	кода
     32	014B  B3 88 A3 AE E0 EC	20+	     signatureLine1		     DB	     179, 'Игорь Латкин', 179, 10
     33	      8B A0 E2 AA A8 AD	B3+
     34	      0A
     35	      =000F			     Line1_length		     equ     $-signatureLine1
     36	015A  B3 88 93 35 2D 34	34+	     signatureLine2		     DB	     179, 'ИУ5-44      ',179,  10
     37	      20 20 20 20 20 20	B3+
     38	      0A
     39	      =000F			     Line2_length		     equ     $-signatureLine2
     40	0169  B3 82 A0 E0 A8 A0	AD+	     signatureLine3		     DB	     179, 'Вариант #0  ', 179, 10
     41	      E2 20 23 30 20 20	B3+
     42	      0A
     43	      =000F			     Line3_length		     equ     $-signatureLine3
     44	0178  0A 0D 73 6F 6D 65	20+	     helpMsg				     DB	     10, 13, 'some help', 10, 13
     45	      68 65 6C 70 0A 0D
     46	      =000D			     helpMsg_length		     equ $-helpMsg
     47	0185  0A 0D 73 6F 6D 65	20+	     errorParamMsg		     DB	     10, 13, 'some error on param', 10,	13
     48	      65 72 72 6F 72 20	6F+
     49	      6E 20 70 61 72 61	6D+
     50	      0A 0D
     51	      =0017			     errorParamMsg_length    equ     $-errorParamMsg
     52	019C  0A 0D 74 65 6D 70	20+	     tmpMsg				     DB	     10, 13, 'temp message', 10, 13
     53	      6D 65 73 73 61 67	65+
     54	      0A 0D
     55	      =0010			     tmpMsg_length		     equ $-tmpMsg
     56
     57	01AC  DA 0C*(C4) BF 0A		     tableTop				     DB	     218, Line1_length-3 dup (196), 191, 10
Turbo Assembler	 Version 3.1	    04/17/13 21:16:12	    Page 2
igor.asm



     58	      =000F			     tableTop_length		     equ     $-tableTop
     59	01BB  C0 0C*(C4) D9 0A		     tableBottom			     DB	     192, Line1_length-3 dup (196), 217, 10
     60	      =000F			     tableBottom_length		     equ $-tableBottom
     61
     62					     ;=== Обработчик прерывания	int 09h	===
     63	01CA				     new_09h proc
     64	01CA  50				     push AX
     65	01CB  52				     push DX
     66
     67	01CC  9C				     pushf
     68	01CD  2E: FF 1E	013Dr			     call CS:old_09h
     69
     70	01D2  0E				     push CS
     71	01D3  1F				     pop DS
     72
     73	01D4  E4 60				     in	AL,60h
     74	01D6  3C 3B				     cmp AL,3Bh
     75	01D8  75 06				     jne _noF1
     76
     77	01DA  C7 06 0147r 0001			     mov isPrintingSignature, 1
     78
     79	01E0					     _noF1:
     80	01E0  5A				     pop DX
     81	01E1  58				     pop AX
     82
     83	01E2  CF				     iret
     84	01E3				     new_09h endp
     85
     86					     ;=== Обработчик прерывания	int 1Ch	===;
     87					     ;=== Вызывается каждые 55 мс ===;
     88	01E3				     new_1Ch proc
     89	01E3  50				     push AX
     90	01E4  0E				     push CS
     91	01E5  1F				     pop DS
     92
     93	01E6  9C				     pushf
     94	01E7  2E: FF 1E	0141r			     call CS:old_1Ch
     95
     96	01EC  83 3E 0147r 01			     cmp isPrintingSignature, 1	;если нажата управляющая клавиша (в данном случае F1)
     97	01F1  75 1E				     jne _notToPrint
     98
     99	01F3  83 3E 0145r 25				     cmp counter, printDelay*1000/55 + 1 ;если кол-во "тактов" эквивалентно +
    100				     %printDelay% секундам
    101	01F8  74 03					     je	_letsPrint
    102
    103	01FA  EB 10 90					     jmp _dontPrint
    104
    105	01FD						     _letsPrint:
    106	01FD  C7 06 0147r 0000					     mov isPrintingSignature, 0
    107	0203  C7 06 0145r 0000					     mov counter, 0
    108	0209  E8 0007						     call printSignature
    109
    110	020C						     _dontPrint:
    111	020C  83 06 0145r 01					     add counter, 1
    112
    113	0211					     _notToPrint:
    114
Turbo Assembler	 Version 3.1	    04/17/13 21:16:12	    Page 3
igor.asm



    115	0211  58				     pop AX
    116
    117	0212  CF				     iret
    118	0213				     new_1Ch endp
    119
    120	0213				     printSignature proc
    121	0213  50				     push AX
    122	0214  52				     push DX
    123	0215  51				     push CX
    124	0216  53				     push BX
    125	0217  06				     push ES
    126	0218  54				     push SP
    127	0219  55				     push BP
    128	021A  56				     push SI
    129	021B  57				     push DI
    130
    131	021C  33 C0				     xor AX, AX
    132	021E  33 D2				     xor DX, DX
    133
    134	0220  B4 03				     mov AH, 03h					     ;чтение текущей позиции+
    135				     курсора
    136	0222  CD 10				     int 10h
    137	0224  52				     push DX						     ;помещаем информацию о +
    138				     положении курсора в стек
    139
    140	0225  83 3E 0149r 00			     cmp printPos, 0
    141	022A  74 0E				     je	_printTop
    142
    143	022C  83 3E 0149r 01			     cmp printPos, 1
    144	0231  74 0E				     je	_printCenter
    145
    146	0233  83 3E 0149r 02			     cmp printPos, 2
    147	0238  74 0E				     je	_printBottom
    148
    149						     ;все числа	подобраны на глаз...
    150	023A					     _printTop:
    151	023A  B6 00					     mov DH, 0
    152	023C  B2 1F					     mov DL, 1Fh
    153	023E  EB 0F 90					     jmp _actualPrint
    154
    155	0241					     _printCenter:
    156	0241  B6 09					     mov DH, 9
    157	0243  B2 1F					     mov DL, 1Fh
    158	0245  EB 08 90					     jmp _actualPrint
    159
    160	0248					     _printBottom:
    161	0248  B6 13					     mov DH, 19
    162	024A  B2 1F					     mov DL, 1Fh
    163	024C  EB 01 90					     jmp _actualPrint
    164
    165	024F					     _actualPrint:
    166	024F  B4 0F					     mov AH, 0Fh				     ;чтение текущего	    +
    167				     видеорежима. в BH - текущая страница
    168	0251  CD 10					     int 10h
    169
    170	0253  0E					     push CS					     ;
    171	0254  07					     pop ES					     ;указываем	ES на CS
Turbo Assembler	 Version 3.1	    04/17/13 21:16:12	    Page 4
igor.asm



    172
    173							     ;вывод 'верхушки' таблицы
    174	0255  BD 01ACr					     lea BP, CS:tableTop		     ;помещаем в BP указатель на    +
    175				     выводимую строку
    176	0258  B9 000F					     mov CX, tableTop_length	     ;в	CX - длина строки
    177	025B  B3 07					     mov BL, 0111b			     ;цвет выводимого текста ref:   +
    178				     http://en.wikipedia.org/wiki/BIOS_color_attributes
    179	025D  B8 1301					     mov AX, 1301h			     ;AH=13h - номер ф-ии, AL=01h - +
    180				     курсор перемещается при выводе каждого из символов	строки
    181	0260  CD 10					     int 10h
    182
    183							     ;вывод первой линии
    184	0262  BD 014Br					     lea BP, CS:signatureLine1
    185	0265  B9 000F					     mov CX, Line1_length
    186	0268  B3 07					     mov BL, 0111b
    187	026A  80 EA 0E					     sub DL, tableTop_length-1	     ;смещаем начало ввода на "нужное"
    188	026D  B8 1301					     mov AX, 1301h
    189	0270  CD 10					     int 10h
    190
    191							     ;вывод второй линии
    192	0272  BD 015Ar					     lea BP, CS:signatureLine2
    193	0275  B9 000F					     mov CX, Line2_length
    194	0278  B3 07					     mov BL, 0111b
    195	027A  80 EA 0E					     sub DL, Line1_length-1	     ;смещаем начало ввода на "нужное"
    196	027D  B8 1301					     mov AX, 1301h
    197	0280  CD 10					     int 10h
    198
    199							     ;вывод третьей линии
    200	0282  BD 0169r					     lea BP, CS:signatureLine3
    201	0285  B9 000F					     mov CX, Line3_length
    202	0288  B3 07					     mov BL, 0111b
    203	028A  80 EA 0E					     sub DL, Line2_length-1
    204	028D  B8 1301					     mov AX, 1301h
    205	0290  CD 10					     int 10h
    206
    207							     ;вывод 'низа' таблицы
    208	0292  BD 01BBr					     lea BP, CS:tableBottom
    209	0295  B9 000F					     mov CX, tableBottom_length
    210	0298  B3 07					     mov BL, 0111b
    211	029A  80 EA 0E					     sub DL, Line3_length-1	     ;смещаем начало ввода на "нужное"
    212	029D  B8 1301					     mov AX, 1301h
    213	02A0  CD 10					     int 10h
    214
    215	02A2  5A					     pop DX					     ;восстанавливаем из    +
    216				     стека прежнее положение курсора
    217	02A3  B4 02					     mov AH, 02h				     ;меняем положение	    +
    218				     курсора на	первоначальное
    219	02A5  CD 10					     int 10h
    220
    221	02A7  5F				     pop DI
    222	02A8  5E				     pop SI
    223	02A9  5D				     pop BP
    224	02AA  5C				     pop SP
    225	02AB  07				     pop ES
    226	02AC  5B				     pop BX
    227	02AD  59				     pop CX
    228	02AE  5A				     pop DX
Turbo Assembler	 Version 3.1	    04/17/13 21:16:12	    Page 5
igor.asm



    229	02AF  58				     pop AX
    230
    231	02B0  C3				     ret
    232	02B1				     printSignature endp
    233
    234
    235	02B1				     showHelp proc
    236	02B1  0E				     push CS
    237	02B2  07				     pop ES
    238	02B3  BE 0080				     mov SI, 80h			     ;SI=смещение командной строки.
    239	02B6  AC				     lodsb					     ;Получим кол-во символов.
    240	02B7  0A C0				     or	AL, AL				     ;Если 0 символов введено,
    241	02B9  74 14				     jz	Got_cmd					     ;то все в порядке.
    242	02BB  3C 03				     cmp AL, 3				     ;Иначе ввели не 3 символа?	(пробел	+ /X)
    243	02BD  75 13				     jne No_string			     ;Да - на метку No_string
    244
    245	02BF  46				     inc SI					     ;Теперь SI	указывает на первый +
    246				     символ строки.
    247
    248	02C0					     Next_char:
    249	02C0  AD					     lodsw				     ;Получаем два символа
    250	02C1  3D 3F2F					     cmp AX, '?/'			     ;Это '/?' ? Данные	будут	    +
    251				     наоборот!
    252	02C4  74 0F					     je	_question			     ;Да - на выход...
    253	02C6  3D 752F					     cmp AX, 'u/'
    254	02C9  74 1D					     je	_finishTSR
    255
    256	02CB  EB 05 90					     jmp No_string
    257							     ;mov AL, 1			     ;Сигнал того,  что	пора удалять	    +
    258				     программу из памяти
    259	02CE  C3					     ret
    260
    261	02CF					     Got_cmd:
    262	02CF  32 C0					     xor AL, AL				     ;Сигнал того, что ничего не    +
    263				     ввели в командной строке
    264	02D1  C3					     ret				     ;Выходим из процедуры
    265
    266	02D2					     No_string:
    267	02D2  B0 03					     mov AL, 3				     ;Сигнал неверного ввода	    +
    268				     командной строки
    269	02D4  C3					     ret
    270
    271	02D5					     _question:
    272							     ; вывод строки помощи
    273	02D5  B4 03						     mov AH,03
    274	02D7  CD 10						     int 10h
    275	02D9  BD 0178r						     lea BP, CS:helpMsg
    276	02DC  B9 000D						     mov CX, helpMsg_length
    277	02DF  B3 07						     mov BL, 0111b
    278	02E1  B8 1301						     mov AX, 1301h
    279	02E4  CD 10						     int 10h
    280							     ; конец вывода строки помощи
    281	02E6  EB D8					     jmp Next_char
    282
    283	02E8					     _finishTSR:
    284							     ; do something smart
    285							     ; вывод строки
Turbo Assembler	 Version 3.1	    04/17/13 21:16:12	    Page 6
igor.asm



    286	02E8  B4 03						     mov AH,03
    287	02EA  CD 10						     int 10h
    288	02EC  BD 019Cr						     lea BP, CS:tmpMsg
    289	02EF  B9 0010						     mov CX, tmpMsg_length
    290	02F2  B3 07						     mov BL, 0111b
    291	02F4  B8 1301						     mov AX, 1301h
    292	02F7  CD 10						     int 10h
    293							     ; конец вывода строки
    294	02F9  EB C5					     jmp Next_char
    295
    296
    297
    298	02FB  EB 12 90				     jmp exitHelp
    299
    300	02FE					     errorParam:
    301							     ;вывод строки
    302	02FE  B4 03						     mov AH,03
    303	0300  CD 10						     int 10h
    304	0302  BD 0185r						     lea BP, CS:errorParamMsg
    305	0305  B9 0017						     mov CX, errorParamMsg_length
    306	0308  B3 07						     mov BL, 0111b
    307	030A  B8 1301						     mov AX, 1301h
    308	030D  CD 10						     int 10h
    309							     ;конец вывода строки
    310	030F					     exitHelp:
    311	030F  C3				     ret
    312	0310				     showHelp endp
    313
    314
    315	0310				     _loadTSR:
    316						     ;---------------Проверка загрузки программы в ОП--
    317	0310  B8 FF00				     mov AX, 0FF00h
    318	0313  CD 2F				     int 2Fh
    319	0315  3C AA				     cmp AL, 0AAh
    320	0317  74 51				     je	already_load
    321
    322						     ;---------------Установка текстового режима-------
    323	0319  B4 03				     mov AH,03
    324	031B  CD 10				     int 10h
    325
    326	031D  B4 00				     mov AH,00h
    327	031F  B0 83				     mov AL,83h
    328	0321  CD 10				     int 10h
    329
    330	0323  B4 02				     mov AH,02
    331	0325  CD 10				     int 10h
    332
    333	0327  E8 FF87				     call showHelp
    334
    335						     ;===== int	09h loading =====;
    336	032A  B8 3509				     mov AX, 3509h
    337	032D  CD 21				     int 21h
    338	032F  2E: 89 1E	013Dr			     mov WORD ptr CS:old_09h, BX
    339	0334  2E: 8C 06	013Fr			     mov WORD ptr CS:old_09h + 2, ES
    340	0339  B8 2509				     mov AX, 2509h
    341	033C  BA 01CAr				     lea DX, new_09h
    342	033F  CD 21				     int 21h
Turbo Assembler	 Version 3.1	    04/17/13 21:16:12	    Page 7
igor.asm



    343
    344						     ;===== int	1Ch loading =====;
    345	0341  B8 351C				     mov AX, 351Ch
    346	0344  CD 21				     int 21h
    347	0346  2E: 89 1E	0141r			     mov WORD ptr CS:old_1Ch, BX
    348	034B  2E: 8C 06	0143r			     mov WORD ptr CS:old_1Ch + 2, ES
    349	0350  B8 251C				     mov AX, 251Ch
    350	0353  BA 01E3r				     lea DX, new_1Ch
    351	0356  CD 21				     int 21h
    352
    353						     ;===== Terminate and stay resident	=====;
    354	0358  B4 09				     mov AH, 09h
    355	035A  BA 0103r				     mov DX, offset msg2
    356	035D  CD 21				     int 21h
    357
    358	035F  BA 0031				     mov DX, (_loadTSR - _start	+ 10Fh)	/ 16
    359	0362  B8 3100				     mov AX, 3100h
    360	0365  CD 21				     int 21h
    361	0367  EB 08 90				     jmp _exit
    362
    363	036A					     already_load:
    364	036A  B4 09					     mov AH, 09h
    365	036C  BA 011Er					     mov DX, offset mess_load
    366	036F  CD 21					     int 21h
    367
    368	0371					     _exit:
    369	0371  B8 4C00					     mov AX, 4C00h
    370	0374  CD 21					     int 21h
    371
    372
    373	0376			     IgorPart ends					      ;	конец кодового сегмента
    374				     end _start							      ;	конец программы
Turbo Assembler	 Version 3.1	    04/17/13 21:16:12	    Page 8
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "04/17/13"
??FILENAME			  Text	 "igor	  "
??TIME				  Text	 "21:16:12"
??VERSION			  Number 030A
@CPU				  Text	 0101H
@CURSEG				  Text	 IGORPART
@FILENAME			  Text	 IGOR
@WORDSIZE			  Text	 2
ALREADY_LOAD			  Near	 IGORPART:036A
COUNTER				  Word	 IGORPART:0145
ERRORPARAM			  Near	 IGORPART:02FE
ERRORPARAMMSG			  Byte	 IGORPART:0185
ERRORPARAMMSG_LENGTH		  Number 0017
EXITHELP			  Near	 IGORPART:030F
GOT_CMD				  Near	 IGORPART:02CF
HELPMSG				  Byte	 IGORPART:0178
HELPMSG_LENGTH			  Number 000D
ISPRINTINGSIGNATURE		  Word	 IGORPART:0147
LINE1_LENGTH			  Number 000F
LINE2_LENGTH			  Number 000F
LINE3_LENGTH			  Number 000F
MESS_LOAD			  Byte	 IGORPART:011E
MSG2				  Byte	 IGORPART:0103
NEW_09H				  Near	 IGORPART:01CA
NEW_1CH				  Near	 IGORPART:01E3
NEXT_CHAR			  Near	 IGORPART:02C0
NO_STRING			  Near	 IGORPART:02D2
OLD_09H				  Dword	 IGORPART:013D
OLD_1CH				  Dword	 IGORPART:0141
PRINTDELAY			  Number 0002
PRINTPOS			  Word	 IGORPART:0149
PRINTSIGNATURE			  Near	 IGORPART:0213
SHOWHELP			  Near	 IGORPART:02B1
SIGNATURELINE1			  Byte	 IGORPART:014B
SIGNATURELINE2			  Byte	 IGORPART:015A
SIGNATURELINE3			  Byte	 IGORPART:0169
TABLEBOTTOM			  Byte	 IGORPART:01BB
TABLEBOTTOM_LENGTH		  Number 000F
TABLETOP			  Byte	 IGORPART:01AC
TABLETOP_LENGTH			  Number 000F
TMPMSG				  Byte	 IGORPART:019C
TMPMSG_LENGTH			  Number 0010
_ACTUALPRINT			  Near	 IGORPART:024F
_DONTPRINT			  Near	 IGORPART:020C
_EXIT				  Near	 IGORPART:0371
_FINISHTSR			  Near	 IGORPART:02E8
_LETSPRINT			  Near	 IGORPART:01FD
_LOADTSR			  Near	 IGORPART:0310
_NOF1				  Near	 IGORPART:01E0
_NOTTOPRINT			  Near	 IGORPART:0211
_PRINTBOTTOM			  Near	 IGORPART:0248
_PRINTCENTER			  Near	 IGORPART:0241
_PRINTTOP			  Near	 IGORPART:023A
_QUESTION			  Near	 IGORPART:02D5
Turbo Assembler	 Version 3.1	    04/17/13 21:16:12	    Page 9
Symbol Table



_START				  Near	 IGORPART:0100

Groups & Segments		  Bit Size Align  Combine Class

IGORPART			  16  0376 Para	  none	  CODE
